{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\code\\\\Projects\\\\snake-multiplayer\\\\snake-multiplayer-client\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport './Home.css';\nimport { useInterval } from '../InGame/useInterval';\nimport api from '../../services/api';\n\nconst Home = () => {\n  const history = useHistory();\n\n  const goBack = () => history.goBack();\n\n  const toGame = () => history.push('/in-game');\n\n  const [color, setColor] = useState('lightgrey');\n  const [colors, setColors] = useState([]);\n  const [map, setMap] = useState(null);\n  const [myPosition, setMyPosition] = useState(null);\n  useEffect(() => {\n    api.get('colors').then(response => {\n      setColors(response.data);\n    });\n  }, []);\n  useInterval(() => {\n    api.get('colors').then(response => {\n      setColors(response.data);\n    });\n  }, 1000);\n  useEffect(() => {\n    api.get('map').then(response => {\n      setMap(response.data);\n    });\n  }, []);\n\n  const handleCreateSnake = data => {\n    api.post('snakes', data).then(response => {\n      if (response.data !== 0) {\n        goBack();\n        alert('Oh no! looks like someone beat you to that color...');\n        return;\n      }\n\n      setMyPosition(data.position);\n    });\n  };\n\n  const generatePosition = () => [[Math.floor(Math.random() * map.size[0] / map.scale), Math.floor(Math.random() * map.size[1] / map.scale)]];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, \"Welcome to Snake Battle Royale!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, \"Pick your color:\"), /*#__PURE__*/React.createElement(CirclePicker, {\n    colors: colors,\n    color: color,\n    onChange: pickColor => setColor(pickColor.hex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: color === 'lightgrey' ? 'inactive' : 'active',\n    style: {\n      backgroundColor: color\n    },\n    onClick: color === 'lightgrey' ? () => null : () => handleCreateSnake({\n      color: color,\n      position: generatePosition(),\n      points: 0\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: color === 'lightgrey' ? 'inactiveLink' : 'activeLink',\n    to: color === 'lightgrey' ? '/' : 'in-game',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: 'white'\n    },\n    className: \"fa fa-check fa-2x\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/Projects/snake-multiplayer/snake-multiplayer-client/src/pages/Home/index.js"],"names":["React","useState","useEffect","Link","useHistory","CirclePicker","useInterval","api","Home","history","goBack","toGame","push","color","setColor","colors","setColors","map","setMap","myPosition","setMyPosition","get","then","response","data","handleCreateSnake","post","alert","position","generatePosition","Math","floor","random","size","scale","pickColor","hex","backgroundColor","points"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { CirclePicker } from 'react-color';\r\nimport './Home.css';\r\nimport { useInterval } from '../InGame/useInterval';\r\n\r\nimport api from '../../services/api';\r\n\r\nconst Home = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst goBack = () => history.goBack();\r\n\r\n\tconst toGame = () => history.push('/in-game');\r\n\r\n\tconst [color, setColor] = useState('lightgrey');\r\n\tconst [colors, setColors] = useState([]);\r\n\tconst [map, setMap] = useState(null);\r\n\tconst [myPosition, setMyPosition] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tapi.get('colors').then((response) => {\r\n\t\t\tsetColors(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseInterval(() => {\r\n\t\tapi.get('colors').then((response) => {\r\n\t\t\tsetColors(response.data);\r\n\t\t});\r\n\t}, 1000);\r\n\r\n\tuseEffect(() => {\r\n\t\tapi.get('map').then((response) => {\r\n\t\t\tsetMap(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleCreateSnake = (data) => {\r\n\t\tapi.post('snakes', data).then((response) => {\r\n\t\t\tif (response.data !== 0) {\r\n\t\t\t\tgoBack();\r\n\t\t\t\talert('Oh no! looks like someone beat you to that color...');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetMyPosition(data.position);\r\n\t\t});\r\n\t};\r\n\r\n\tconst generatePosition = () => [\r\n\t\t[\r\n\t\t\tMath.floor((Math.random() * map.size[0]) / map.scale),\r\n\t\t\tMath.floor((Math.random() * map.size[1]) / map.scale),\r\n\t\t],\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t<h1>Welcome to Snake Battle Royale!</h1>\r\n\t\t\t<p>Pick your color:</p>\r\n\t\t\t<CirclePicker\r\n\t\t\t\tcolors={colors}\r\n\t\t\t\tcolor={color}\r\n\t\t\t\tonChange={(pickColor) => setColor(pickColor.hex)}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={color === 'lightgrey' ? 'inactive' : 'active'}\r\n\t\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\t\tonClick={\r\n\t\t\t\t\tcolor === 'lightgrey'\r\n\t\t\t\t\t\t? () => null\r\n\t\t\t\t\t\t: () =>\r\n\t\t\t\t\t\t\t\thandleCreateSnake({\r\n\t\t\t\t\t\t\t\t\tcolor: color,\r\n\t\t\t\t\t\t\t\t\tposition: generatePosition(),\r\n\t\t\t\t\t\t\t\t\tpoints: 0,\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tclassName={color === 'lightgrey' ? 'inactiveLink' : 'activeLink'}\r\n\t\t\t\t\tto={color === 'lightgrey' ? '/' : 'in-game'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tstyle={{ color: 'white' }}\r\n\t\t\t\t\t\tclassName=\"fa fa-check fa-2x\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t></i>\r\n\t\t\t\t</Link>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
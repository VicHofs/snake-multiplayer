{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\code\\\\Projects\\\\snake-multiplayer\\\\snake-multiplayer-client\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport './Home.css';\nimport api from '../../services/api';\n\nconst Home = () => {\n  const [color, setColor] = useState('lightgrey');\n  const [colors, setColors] = useState([]);\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    api.get('colors').then(response => {\n      setColors(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('map').then(response => {\n      setMap(response.data);\n    });\n  }, []);\n\n  const handleCreateSnake = async data => {\n    try {\n      await api.post('snakes', data);\n    } finally {\n      alert('error');\n    }\n  };\n\n  const generatePosition = () => [[Math.floor(Math.random() * map.size[0] / map.scale), Math.floor(Math.random() * map.size[1] / map.scale)]];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, \"Welcome to Snake Battle Royale!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"Pick your color:\"), /*#__PURE__*/React.createElement(CirclePicker, {\n    colors: colors,\n    color: color,\n    onChange: pickColor => setColor(pickColor.hex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: color === 'lightgrey' ? 'inactive' : 'active',\n    style: {\n      backgroundColor: color\n    },\n    onClick: color === 'lightgrey' ? () => handleCreateSnake({\n      color: color,\n      position: generatePosition(),\n      points: 0\n    }) : () => null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: color === 'lightgrey' ? 'inactiveLink' : 'activeLink',\n    to: color === 'lightgrey' ? '/' : 'in-game',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: 'white'\n    },\n    className: \"fa fa-check fa-2x\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/Projects/snake-multiplayer/snake-multiplayer-client/src/pages/Home/index.js"],"names":["React","useState","useEffect","Link","CirclePicker","api","Home","color","setColor","colors","setColors","map","setMap","get","then","response","data","handleCreateSnake","post","alert","generatePosition","Math","floor","random","size","scale","pickColor","hex","backgroundColor","position","points"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CirclePicker } from 'react-color';\r\nimport './Home.css';\r\n\r\nimport api from '../../services/api';\r\n\r\nconst Home = () => {\r\n\tconst [color, setColor] = useState('lightgrey');\r\n\tconst [colors, setColors] = useState([]);\r\n\tconst [map, setMap] = useState(null);\r\n\tuseEffect(() => {\r\n\t\tapi.get('colors').then((response) => {\r\n\t\t\tsetColors(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tapi.get('map').then((response) => {\r\n\t\t\tsetMap(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleCreateSnake = async (data) => {\r\n\t\ttry {\r\n\t\t\tawait api.post('snakes', data);\r\n\t\t} finally {\r\n\t\t\talert('error');\r\n\t\t}\r\n\t};\r\n\r\n\tconst generatePosition = () => [[Math.floor((Math.random() * map.size[0]) / map.scale), Math.floor((Math.random() * map.size[1]) / map.scale),],];\r\n\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t<h1>Welcome to Snake Battle Royale!</h1>\r\n\t\t\t<p>Pick your color:</p>\r\n\t\t\t<CirclePicker\r\n\t\t\t\tcolors={colors}\r\n\t\t\t\tcolor={color}\r\n\t\t\t\tonChange={(pickColor) => setColor(pickColor.hex)}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={color === 'lightgrey' ? 'inactive' : 'active'}\r\n\t\t\t\tstyle={{ backgroundColor: color }}\r\n\t\t\t\tonClick={\r\n\t\t\t\t\tcolor === 'lightgrey' ? () => handleCreateSnake({color: color, position: generatePosition(), points:0}) : () => null\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Link\r\n\t\t\t\t\tclassName={color === 'lightgrey' ? 'inactiveLink' : 'activeLink'}\r\n\t\t\t\t\tto={color === 'lightgrey' ? '/' : 'in-game'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i\r\n\t\t\t\t\t\tstyle={{ color: 'white' }}\r\n\t\t\t\t\t\tclassName=\"fa fa-check fa-2x\"\r\n\t\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t\t></i>\r\n\t\t\t\t</Link>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
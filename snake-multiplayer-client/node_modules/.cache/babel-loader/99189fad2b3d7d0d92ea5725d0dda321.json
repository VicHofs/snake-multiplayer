{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\code\\\\React\\\\snake\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport UIfx from 'uifx';\nimport gameOver from './assets/gameOver.mp3';\nimport point from './assets/point.wav';\nimport hit from './assets/hit.wav';\nimport Modal from 'react-modal';\nimport { useInterval } from './useInterval.js';\nimport { mapSize, snakeSpawnPos, appleSpawnPos, mapScale, speed, compass } from './initializer.js';\nimport './App.css';\nconst gameOverSound = new UIfx(gameOver);\nconst pointSound = new UIfx(point);\nconst hitSound = new UIfx(hit);\n\nconst App = () => {\n  const canvasRef = useRef();\n  const [modalOpen, setModalOpen] = useState(true);\n  const [gameOverModal, setGameOverModal] = useState(false);\n  const [snake, setSnake] = useState(snakeSpawnPos);\n  const [apple, setApple] = useState(appleSpawnPos);\n  const [momentum, setMomentum] = useState([0, -1]);\n  const [syncMomentum, setSyncMomentum] = useState([0, -1]);\n  const [snakeSpeed, setSnakeSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.setTransform(mapScale, 0, 0, mapScale, 0, 0);\n  });\n\n  const startGame = () => {\n    let newSnake = [[Math.floor(Math.random() * mapSize[0] / mapScale), Math.floor(Math.random() * mapSize[1] / mapScale)]];\n    newSnake.push(snakeSpawnPos[0].map((pos, i) => i === 1 ? pos + 1 : pos));\n    setSnake(newSnake);\n    let newApple = [Math.floor(Math.random() * mapSize[0] / mapScale), Math.floor(Math.random() * mapSize[1] / mapScale)];\n\n    while (newApple in snakeSpawnPos) newApple = [Math.floor(Math.random() * mapSize[0] / mapScale), Math.floor(Math.random() * mapSize[1] / mapScale)];\n\n    setApple(newApple);\n    setMomentum([0, -1]);\n    setSnakeSpeed(speed);\n    setGameOver(false);\n  };\n\n  const move = keyCode => {\n    if (keyCode in compass) {\n      const newMomentum = compass[keyCode];\n      if (newMomentum.map(Math.abs)[0] !== momentum.map(Math.abs)[0] && newMomentum.map(Math.abs)[1] !== momentum.map(Math.abs)[1]) setMomentum(newMomentum);\n    } else if (keyCode === 13 || keyCode === 32) startGame();\n  };\n\n  const endGame = () => {\n    setGameOverModal(true);\n    hitSound.play();\n    gameOverSound.play();\n    setSnakeSpeed(null);\n    setGameOver(true);\n  };\n\n  const wrapAdjust = (value, index) => {\n    if (value >= mapSize[index] / mapScale) return 0;else if (value < 0) return mapSize[index] / mapScale - 1;else return value;\n  };\n\n  const spawnApple = () => apple.map((_, i) => Math.floor(Math.random() * mapSize[i] / mapScale));\n\n  const checkCollision = (head, snek = snake) => {\n    for (const segment of snek) {\n      if (head[0] === segment[0] && head[1] === segment[1]) return true;\n    }\n\n    return false;\n  };\n\n  const checkAppleCollision = snek => {\n    if (snek[0][0] === apple[0] && snek[0][1] === apple[1]) {\n      pointSound.play();\n      let newApple = spawnApple();\n\n      while (checkCollision(newApple, snek)) spawnApple();\n\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  };\n\n  const gameOn = () => {\n    setSyncMomentum(momentum);\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [wrapAdjust(snakeCopy[0][0] + syncMomentum[0], 0), wrapAdjust(snakeCopy[0][1] + syncMomentum[1], 1)];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n    setSnake(snakeCopy);\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, mapSize[0], mapSize[1]);\n    context.fillStyle = '#ff353a';\n    context.fillRect(apple[0], apple[1], 1, 1);\n    context.fillStyle = '#00ff40';\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n  }, [snake, apple, gameOver]);\n  useInterval(() => gameOn(), snakeSpeed);\n  const element = document.getElementById('root');\n\n  function openFullscreen() {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      /* Firefox */\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      /* IE/Edge */\n      element.msRequestFullscreen();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"keyCap\",\n    role: \"button\",\n    tabIndex: \"-1\",\n    onKeyDown: event => move(event.keyCode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"gameOverModal\",\n    overlayClassName: \"modalOverlay\",\n    isOpen: gameOverModal,\n    onRequestClose: () => setGameOverModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, \"Game Over!\")), /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal\",\n    overlayClassName: \"modalOverlay\",\n    isOpen: modalOpen,\n    onRequestClose: () => setModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, \"Would you like to enable fullscreen?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, \"(Recommended)\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setModalOpen(false);\n      openFullscreen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, \"Ok\")), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 4\n    }\n  }, \"Classic Snake\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"map\",\n    ref: canvasRef,\n    width: `${mapSize[0]}px`,\n    height: `${mapSize[1]}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: !snakeSpeed ? 'startButton' : 'restartButton',\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, !snakeSpeed ? 'Start Game ' : 'Restart Game ')));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/React/snake/src/App.js"],"names":["React","useState","useRef","useEffect","UIfx","gameOver","point","hit","Modal","useInterval","mapSize","snakeSpawnPos","appleSpawnPos","mapScale","speed","compass","gameOverSound","pointSound","hitSound","App","canvasRef","modalOpen","setModalOpen","gameOverModal","setGameOverModal","snake","setSnake","apple","setApple","momentum","setMomentum","syncMomentum","setSyncMomentum","snakeSpeed","setSnakeSpeed","setGameOver","context","current","getContext","setTransform","startGame","newSnake","Math","floor","random","push","map","pos","i","newApple","move","keyCode","newMomentum","abs","endGame","play","wrapAdjust","value","index","spawnApple","_","checkCollision","head","snek","segment","checkAppleCollision","gameOn","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","pop","clearRect","fillStyle","fillRect","forEach","x","y","element","document","getElementById","openFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","event"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport UIfx from 'uifx';\nimport gameOver from './assets/gameOver.mp3';\nimport point from './assets/point.wav';\nimport hit from './assets/hit.wav';\nimport Modal from 'react-modal';\nimport { useInterval } from './useInterval.js';\nimport {\n\tmapSize,\n\tsnakeSpawnPos,\n\tappleSpawnPos,\n\tmapScale,\n\tspeed,\n\tcompass,\n} from './initializer.js';\nimport './App.css';\n\nconst gameOverSound = new UIfx(gameOver);\nconst pointSound = new UIfx(point);\nconst hitSound = new UIfx(hit);\n\nconst App = () => {\n\tconst canvasRef = useRef();\n\tconst [modalOpen, setModalOpen] = useState(true);\n\tconst [gameOverModal, setGameOverModal] = useState(false);\n\tconst [snake, setSnake] = useState(snakeSpawnPos);\n\tconst [apple, setApple] = useState(appleSpawnPos);\n\tconst [momentum, setMomentum] = useState([0, -1]);\n\tconst [syncMomentum, setSyncMomentum] = useState([0, -1]);\n\tconst [snakeSpeed, setSnakeSpeed] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst context = canvasRef.current.getContext('2d');\n\t\tcontext.setTransform(mapScale, 0, 0, mapScale, 0, 0);\n\t});\n\n\tconst startGame = () => {\n\t\tlet newSnake = [\n\t\t\t[Math.floor(Math.random() * (mapSize[0]) / mapScale), Math.floor(Math.random() * (mapSize[1]) / mapScale)]\n\t\t  ];\n\t\tnewSnake.push(snakeSpawnPos[0].map((pos, i) => i===1? pos+1: pos));\n\t\tsetSnake(newSnake);\n\t\tlet newApple = [Math.floor(Math.random() * (mapSize[0]) / mapScale), Math.floor(Math.random() * (mapSize[1]) / mapScale)];\n\t\twhile (newApple in snakeSpawnPos) newApple = [Math.floor(Math.random() * (mapSize[0]) / mapScale), Math.floor(Math.random() * (mapSize[1]) / mapScale)];\n\t\tsetApple(newApple);\n\t\tsetMomentum([0, -1]);\n\t\tsetSnakeSpeed(speed);\n\t\tsetGameOver(false);\n\t};\n\n\tconst move = (keyCode) => {\n\t\tif (keyCode in compass) {\n\t\t\tconst newMomentum = compass[keyCode];\n\t\t\tif (\n\t\t\t\tnewMomentum.map(Math.abs)[0] !== momentum.map(Math.abs)[0] &&\n\t\t\t\tnewMomentum.map(Math.abs)[1] !== momentum.map(Math.abs)[1]\n\t\t\t)\n\t\t\t\tsetMomentum(newMomentum);\n\t\t} else if (keyCode === 13 || keyCode === 32) startGame();\n\t};\n\n\tconst endGame = () => {\n\t\tsetGameOverModal(true);\n\t\thitSound.play();\n\t\tgameOverSound.play();\n\t\tsetSnakeSpeed(null);\n\t\tsetGameOver(true);\n\t};\n\n\tconst wrapAdjust = (value, index) => {\n\t\tif (value >= mapSize[index] / mapScale) return 0;\n\t\telse if (value < 0) return mapSize[index] / mapScale - 1;\n\t\telse return value;\n\t};\n\n\tconst spawnApple = () =>\n\t\tapple.map((_, i) => Math.floor((Math.random() * mapSize[i]) / mapScale));\n\n\tconst checkCollision = (head, snek = snake) => {\n\t\tfor (const segment of snek) {\n\t\t\tif (head[0] === segment[0] && head[1] === segment[1]) return true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst checkAppleCollision = (snek) => {\n\t\tif (snek[0][0] === apple[0] && snek[0][1] === apple[1]) {\n\t\t\tpointSound.play();\n\t\t\tlet newApple = spawnApple();\n\t\t\twhile (checkCollision(newApple, snek)) spawnApple();\n\t\t\tsetApple(newApple);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst gameOn = () => {\n\t\tsetSyncMomentum(momentum);\n\t\tconst snakeCopy = JSON.parse(JSON.stringify(snake));\n\t\tconst newSnakeHead = [\n\t\t\twrapAdjust(snakeCopy[0][0] + syncMomentum[0], 0),\n\t\t\twrapAdjust(snakeCopy[0][1] + syncMomentum[1], 1),\n\t\t];\n\t\tsnakeCopy.unshift(newSnakeHead);\n\t\tif (checkCollision(newSnakeHead)) endGame();\n\t\tif (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n\t\tsetSnake(snakeCopy);\n\t};\n\n\tuseEffect(() => {\n\t\tconst context = canvasRef.current.getContext('2d');\n\t\tcontext.clearRect(0, 0, mapSize[0], mapSize[1]);\n\t\tcontext.fillStyle = '#ff353a';\n\t\tcontext.fillRect(apple[0], apple[1], 1, 1);\n\t\tcontext.fillStyle = '#00ff40';\n\t\tsnake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n\t}, [snake, apple, gameOver]);\n\n\tuseInterval(() => gameOn(), snakeSpeed);\n\n\tconst element = document.getElementById('root');\n\n\tfunction openFullscreen() {\n\t\tif (element.requestFullscreen) {\n\t\t\telement.requestFullscreen();\n\t\t} else if (element.mozRequestFullScreen) {\n\t\t\t/* Firefox */\n\t\t\telement.mozRequestFullScreen();\n\t\t} else if (element.webkitRequestFullscreen) {\n\t\t\t/* Chrome, Safari and Opera */\n\t\t\telement.webkitRequestFullscreen();\n\t\t} else if (element.msRequestFullscreen) {\n\t\t\t/* IE/Edge */\n\t\t\telement.msRequestFullscreen();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"keyCap\"\n\t\t\trole=\"button\"\n\t\t\ttabIndex=\"-1\"\n\t\t\tonKeyDown={(event) => move(event.keyCode)}\n\t\t>\n\t\t\t<Modal\n\t\t\t\tclassName=\"gameOverModal\"\n\t\t\t\toverlayClassName=\"modalOverlay\"\n\t\t\t\tisOpen={gameOverModal}\n\t\t\t\tonRequestClose={() => setGameOverModal(false)}\n\t\t\t>\n\t\t\t\t<h1 className=\"mainTitle\">Game Over!</h1>\n\t\t\t</Modal>\n\t\t\t<Modal\n\t\t\t\tclassName=\"modal\"\n\t\t\t\toverlayClassName=\"modalOverlay\"\n\t\t\t\tisOpen={modalOpen}\n\t\t\t\tonRequestClose={() => setModalOpen(false)}\n\t\t\t>\n\t\t\t\t<h2>Would you like to enable fullscreen?</h2>\n\t\t\t\t<p>(Recommended)</p>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetModalOpen(false);\n\t\t\t\t\t\topenFullscreen();\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tOk\n\t\t\t\t</button>\n\t\t\t</Modal>\n\t\t\t<h1 className=\"mainTitle\">Classic Snake</h1>\n\t\t\t<canvas\n\t\t\t\tclassName=\"map\"\n\t\t\t\tref={canvasRef}\n\t\t\t\twidth={`${mapSize[0]}px`}\n\t\t\t\theight={`${mapSize[1]}px`}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\tclassName={!snakeSpeed ? 'startButton' : 'restartButton'}\n\t\t\t\tonClick={startGame}\n\t\t\t>\n\t\t\t\t<span>{!snakeSpeed ? 'Start Game ' : 'Restart Game '}</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"const mapSize = [800, 800];\nconst mapScale = 25;\nconst snakeSpawnPos = [[Math.floor(Math.random() * mapSize[0] / mapScale), Math.floor(Math.random() * mapSize[1] / mapScale)], [8, 8]];\nsnakeSpawnPos.push(snakeSpawnPos[0].map((_, i) => i == 1 ? i - 1 : i));\nconst appleSpawnPos = [8, 3];\nconst speed = 100;\nconst compass = {\n  38: [0, -1],\n  // up\n  40: [0, 1],\n  // down\n  37: [-1, 0],\n  // left\n  39: [1, 0],\n  // right\n  87: [0, -1],\n  // up\n  83: [0, 1],\n  // down\n  65: [-1, 0],\n  // left\n  68: [1, 0] // right\n\n};\nexport { mapSize, snakeSpawnPos, appleSpawnPos, mapScale, speed, compass };","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/React/snake/src/initializer.js"],"names":["mapSize","mapScale","snakeSpawnPos","Math","floor","random","push","map","_","i","appleSpawnPos","speed","compass"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAAC,GAAD,EAAM,GAAN,CAAhB;AACA,MAAMC,QAAQ,GAAG,EAAjB;AACA,MAAMC,aAAa,GAAG,CACpB,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBL,OAAO,CAAC,CAAD,CAAxB,GAA+BC,QAA1C,CAAD,EAAsDE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBL,OAAO,CAAC,CAAD,CAAxB,GAA+BC,QAA1C,CAAtD,CADoB,EAEpB,CAAC,CAAD,EAAI,CAAJ,CAFoB,CAAtB;AAIAC,aAAa,CAACI,IAAd,CAAmBJ,aAAa,CAAC,CAAD,CAAb,CAAiBK,GAAjB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,IAAE,CAAH,GAAMA,CAAC,GAAC,CAAR,GAAWA,CAA1C,CAAnB;AACA,MAAMC,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAtB;AACA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,OAAO,GAAG;AACd,MAAI,CAAC,CAAD,EAAI,CAAC,CAAL,CADU;AACD;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CAFU;AAEF;AACZ,MAAI,CAAC,CAAC,CAAF,EAAK,CAAL,CAHU;AAGD;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CAJU;AAIF;AACZ,MAAI,CAAC,CAAD,EAAI,CAAC,CAAL,CALU;AAKD;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CANU;AAMF;AACZ,MAAI,CAAC,CAAC,CAAF,EAAK,CAAL,CAPU;AAOD;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CARU,CAQH;;AARG,CAAhB;AAWA,SACEZ,OADF,EAEEE,aAFF,EAGEQ,aAHF,EAIET,QAJF,EAKEU,KALF,EAMEC,OANF","sourcesContent":["const mapSize = [800, 800];\nconst mapScale = 25;\nconst snakeSpawnPos = [\n  [Math.floor(Math.random() * (mapSize[0]) / mapScale), Math.floor(Math.random() * (mapSize[1]) / mapScale)],\n  [8, 8]\n];\nsnakeSpawnPos.push(snakeSpawnPos[0].map((_, i) => i==1? i-1: i))\nconst appleSpawnPos = [8, 3];\nconst speed = 100;\nconst compass = {\n  38: [0, -1], // up\n  40: [0, 1], // down\n  37: [-1, 0], // left\n  39: [1, 0], // right\n  87: [0, -1], // up\n  83: [0, 1], // down\n  65: [-1, 0], // left\n  68: [1, 0] // right\n};\n\nexport {\n  mapSize,\n  snakeSpawnPos,\n  appleSpawnPos,\n  mapScale,\n  speed,\n  compass\n};\n"]},"metadata":{},"sourceType":"module"}
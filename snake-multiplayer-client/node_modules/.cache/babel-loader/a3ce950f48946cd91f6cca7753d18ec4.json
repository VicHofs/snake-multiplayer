{"ast":null,"code":"// const mapSize = [800, 800];\n// const mapScale = 25;\n// const snakeSpawnPos = [\n// \t[\n// \t\tMath.floor((Math.random() * mapSize[0]) / mapScale),\n// \t\tMath.floor((Math.random() * mapSize[1]) / mapScale),\n// \t],\n// ];\n// snakeSpawnPos.push(snakeSpawnPos[0].map((pos, i) => (i === 1 ? pos + 1 : pos)));\n// let apple = [\n// \tMath.floor((Math.random() * mapSize[0]) / mapScale),\n// \tMath.floor((Math.random() * mapSize[1]) / mapScale),\n// ];\n// while (snakeSpawnPos.includes(apple))\n// \tapple = [\n// \t\tMath.floor((Math.random() * mapSize[0]) / mapScale),\n// \t\tMath.floor((Math.random() * mapSize[1]) / mapScale),\n// \t];\n// const appleSpawnPos = apple;\nconst speed = 100;\nconst compass = {\n  38: [0, -1],\n  // up arrow\n  40: [0, 1],\n  // down arrow\n  37: [-1, 0],\n  // left arrow\n  39: [1, 0],\n  // right arrow\n  87: [0, -1],\n  // up (W)\n  65: [-1, 0],\n  // left (A)\n  83: [0, 1],\n  // down (S)\n  68: [1, 0] // right (D)\n\n};\nexport { speed, compass };","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/Projects/snake-multiplayer/snake-multiplayer-client/src/pages/InGame/initializer.js"],"names":["speed","compass"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,KAAK,GAAG,GAAd;AACA,MAAMC,OAAO,GAAG;AACf,MAAI,CAAC,CAAD,EAAI,CAAC,CAAL,CADW;AACF;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CAFW;AAEH;AACZ,MAAI,CAAC,CAAC,CAAF,EAAK,CAAL,CAHW;AAGF;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CAJW;AAIH;AACZ,MAAI,CAAC,CAAD,EAAI,CAAC,CAAL,CALW;AAKF;AACb,MAAI,CAAC,CAAC,CAAF,EAAK,CAAL,CANW;AAMF;AACb,MAAI,CAAC,CAAD,EAAI,CAAJ,CAPW;AAOH;AACZ,MAAI,CAAC,CAAD,EAAI,CAAJ,CARW,CAQH;;AARG,CAAhB;AAWA,SAASD,KAAT,EAAgBC,OAAhB","sourcesContent":["// const mapSize = [800, 800];\n// const mapScale = 25;\n// const snakeSpawnPos = [\n// \t[\n// \t\tMath.floor((Math.random() * mapSize[0]) / mapScale),\n// \t\tMath.floor((Math.random() * mapSize[1]) / mapScale),\n// \t],\n// ];\n// snakeSpawnPos.push(snakeSpawnPos[0].map((pos, i) => (i === 1 ? pos + 1 : pos)));\n// let apple = [\n// \tMath.floor((Math.random() * mapSize[0]) / mapScale),\n// \tMath.floor((Math.random() * mapSize[1]) / mapScale),\n// ];\n// while (snakeSpawnPos.includes(apple))\n// \tapple = [\n// \t\tMath.floor((Math.random() * mapSize[0]) / mapScale),\n// \t\tMath.floor((Math.random() * mapSize[1]) / mapScale),\n// \t];\n// const appleSpawnPos = apple;\nconst speed = 100;\nconst compass = {\n\t38: [0, -1], // up arrow\n\t40: [0, 1], // down arrow\n\t37: [-1, 0], // left arrow\n\t39: [1, 0], // right arrow\n\t87: [0, -1], // up (W)\n\t65: [-1, 0], // left (A)\n\t83: [0, 1], // down (S)\n\t68: [1, 0], // right (D)\n};\n\nexport { speed, compass };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\code\\\\React\\\\snake\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport UIfx from 'uifx';\nimport gameOver from './assets/gameOver.mp3';\nimport point from './assets/point.wav';\nimport hit from './assets/hit.wav';\nimport Modal from 'react-modal';\nimport { useInterval } from './useInterval.js';\nimport { mapSize, snakeSpawnPos, appleSpawnPos, mapScale, speed, compass } from './initializer.js';\nimport './App.css';\nconst gameOverSound = new UIfx(gameOver);\nconst pointSound = new UIfx(point);\nconst hitSound = new UIfx(hit);\n\nconst App = () => {\n  const canvasRef = useRef();\n  const [modalOpen, setModalOpen] = useState(true);\n  const [gameOverModal, setGameOverModal] = useState(false);\n  const [snake, setSnake] = useState(snakeSpawnPos);\n  const [apple, setApple] = useState(appleSpawnPos);\n  const [momentum, setMomentum] = useState([0, -1]);\n  const [snakeSpeed, setSnakeSpeed] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.setTransform(mapScale, 0, 0, mapScale, 0, 0);\n  });\n\n  const startGame = () => {\n    setSnake(snakeSpawnPos);\n    setApple(appleSpawnPos);\n    setMomentum([0, -1]);\n    setSnakeSpeed(speed);\n    setGameOver(false);\n  };\n\n  const move = keyCode => {\n    if (keyCode in compass) {\n      const newMomentum = compass[keyCode];\n      if (newMomentum.map(Math.abs)[0] !== momentum.map(Math.abs)[0] && newMomentum.map(Math.abs)[1] !== momentum.map(Math.abs)[1]) setMomentum(newMomentum);\n    } else if (keyCode === 13 || keyCode === 32) startGame();\n  };\n\n  const endGame = () => {\n    setGameOverModal(true);\n    hitSound.play();\n    gameOverSound.play();\n    setSnakeSpeed(null);\n    setGameOver(true);\n  };\n\n  const wrapAdjust = (value, index) => {\n    if (value >= mapSize[index] / mapScale) return 0;else if (value < 0) return mapSize[index] / mapScale - 1;else return value;\n  };\n\n  const spawnApple = () => apple.map((_, i) => Math.floor(Math.random() * mapSize[i] / mapScale));\n\n  const checkCollision = (head, snek = snake) => {\n    for (const segment of snek) {\n      if (head[0] === segment[0] && head[1] === segment[1]) return true;\n    }\n\n    return false;\n  };\n\n  const checkAppleCollision = snek => {\n    if (snek[0][0] === apple[0] && snek[0][1] === apple[1]) {\n      pointSound.play();\n      let newApple = spawnApple();\n\n      while (checkCollision(newApple, snek)) spawnApple();\n\n      setApple(newApple);\n      return true;\n    }\n\n    return false;\n  };\n\n  const gameOn = () => {\n    const snakeCopy = JSON.parse(JSON.stringify(snake));\n    const newSnakeHead = [wrapAdjust(snakeCopy[0][0] + momentum[0], 0), wrapAdjust(snakeCopy[0][1] + momentum[1], 1)];\n    snakeCopy.unshift(newSnakeHead);\n    if (checkCollision(newSnakeHead)) endGame();\n    if (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n    setSnake(snakeCopy);\n    console.log('head position is', newSnakeHead);\n    console.log('momentum is', momentum);\n  };\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, mapSize[0], mapSize[1]);\n    context.fillStyle = '#ff353a';\n    context.fillRect(apple[0], apple[1], 1, 1);\n    context.fillStyle = '#00ff40';\n    snake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n  }, [snake, apple, gameOver]);\n  useInterval(() => gameOn(), snakeSpeed);\n  const element = document.getElementById('root');\n\n  function openFullscreen() {\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      /* Firefox */\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      /* IE/Edge */\n      element.msRequestFullscreen();\n    }\n  }\n\n  function closeFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      /* Firefox */\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      /* Chrome, Safari and Opera */\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      /* IE/Edge */\n      document.msExitFullscreen();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"keyCap\",\n    role: \"button\",\n    tabIndex: \"-1\",\n    onKeyDown: event => move(event.keyCode),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    className: \"gameOverModal\",\n    overlayClassName: \"modalOverlay\",\n    isOpen: gameOverModal,\n    onRequestClose: () => setGameOverModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, \"Game Over!\")), /*#__PURE__*/React.createElement(Modal, {\n    className: \"modal\",\n    overlayClassName: \"modalOverlay\",\n    isOpen: modalOpen,\n    onRequestClose: () => setModalOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, \"Would you like to enable fullscreen?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, \"(Recommended)\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"modalButton\",\n    onClick: () => {\n      setModalOpen(false);\n      openFullscreen();\n      closeFullscreen();\n      openFullscreen();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, \"Ok\")), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mainTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }\n  }, \"Classic Snake\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    className: \"map\",\n    ref: canvasRef,\n    width: `${mapSize[0]}px`,\n    height: `${mapSize[1]}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: !snakeSpeed ? 'startButton' : 'restartButton',\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, !snakeSpeed ? 'Start Game ' : 'Restart Game ')));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/React/snake/src/App.js"],"names":["React","useState","useRef","useEffect","UIfx","gameOver","point","hit","Modal","useInterval","mapSize","snakeSpawnPos","appleSpawnPos","mapScale","speed","compass","gameOverSound","pointSound","hitSound","App","canvasRef","modalOpen","setModalOpen","gameOverModal","setGameOverModal","snake","setSnake","apple","setApple","momentum","setMomentum","snakeSpeed","setSnakeSpeed","setGameOver","context","current","getContext","setTransform","startGame","move","keyCode","newMomentum","map","Math","abs","endGame","play","wrapAdjust","value","index","spawnApple","_","i","floor","random","checkCollision","head","snek","segment","checkAppleCollision","newApple","gameOn","snakeCopy","JSON","parse","stringify","newSnakeHead","unshift","pop","console","log","clearRect","fillStyle","fillRect","forEach","x","y","element","document","getElementById","openFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","closeFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACCC,OADD,EAECC,aAFD,EAGCC,aAHD,EAICC,QAJD,EAKCC,KALD,EAMCC,OAND,QAOO,kBAPP;AAQA,OAAO,WAAP;AAEA,MAAMC,aAAa,GAAG,IAAIZ,IAAJ,CAASC,QAAT,CAAtB;AACA,MAAMY,UAAU,GAAG,IAAIb,IAAJ,CAASE,KAAT,CAAnB;AACA,MAAMY,QAAQ,GAAG,IAAId,IAAJ,CAASG,GAAT,CAAjB;;AAEA,MAAMY,GAAG,GAAG,MAAM;AACjB,QAAMC,SAAS,GAAGlB,MAAM,EAAxB;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAACU,aAAD,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAACW,aAAD,CAAlC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,CAAxC;AACA,QAAM,CAAC8B,UAAD,EAAaC,aAAb,IAA8B/B,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACI,QAAD,EAAW4B,WAAX,IAA0BhC,QAAQ,CAAC,KAAD,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM+B,OAAO,GAAGd,SAAS,CAACe,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAhB;AACAF,IAAAA,OAAO,CAACG,YAAR,CAAqBxB,QAArB,EAA+B,CAA/B,EAAkC,CAAlC,EAAqCA,QAArC,EAA+C,CAA/C,EAAkD,CAAlD;AACA,GAHQ,CAAT;;AAKA,QAAMyB,SAAS,GAAG,MAAM;AACvBZ,IAAAA,QAAQ,CAACf,aAAD,CAAR;AACAiB,IAAAA,QAAQ,CAAChB,aAAD,CAAR;AACAkB,IAAAA,WAAW,CAAC,CAAC,CAAD,EAAI,CAAC,CAAL,CAAD,CAAX;AACAE,IAAAA,aAAa,CAAClB,KAAD,CAAb;AACAmB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GAND;;AAQA,QAAMM,IAAI,GAAIC,OAAD,IAAa;AACzB,QAAIA,OAAO,IAAIzB,OAAf,EAAwB;AACvB,YAAM0B,WAAW,GAAG1B,OAAO,CAACyB,OAAD,CAA3B;AACA,UACCC,WAAW,CAACC,GAAZ,CAAgBC,IAAI,CAACC,GAArB,EAA0B,CAA1B,MAAiCf,QAAQ,CAACa,GAAT,CAAaC,IAAI,CAACC,GAAlB,EAAuB,CAAvB,CAAjC,IACAH,WAAW,CAACC,GAAZ,CAAgBC,IAAI,CAACC,GAArB,EAA0B,CAA1B,MAAiCf,QAAQ,CAACa,GAAT,CAAaC,IAAI,CAACC,GAAlB,EAAuB,CAAvB,CAFlC,EAICd,WAAW,CAACW,WAAD,CAAX;AACD,KAPD,MAQK,IAAID,OAAO,KAAK,EAAZ,IAAkBA,OAAO,KAAK,EAAlC,EAAsCF,SAAS;AACpD,GAVD;;AAYA,QAAMO,OAAO,GAAG,MAAM;AACrBrB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAN,IAAAA,QAAQ,CAAC4B,IAAT;AACA9B,IAAAA,aAAa,CAAC8B,IAAd;AACAd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACA,GAND;;AAQA,QAAMc,UAAU,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,QAAID,KAAK,IAAItC,OAAO,CAACuC,KAAD,CAAP,GAAiBpC,QAA9B,EAAwC,OAAO,CAAP,CAAxC,KACK,IAAImC,KAAK,GAAG,CAAZ,EAAe,OAAOtC,OAAO,CAACuC,KAAD,CAAP,GAAiBpC,QAAjB,GAA4B,CAAnC,CAAf,KACA,OAAOmC,KAAP;AACL,GAJD;;AAMA,QAAME,UAAU,GAAG,MAClBvB,KAAK,CAACe,GAAN,CAAU,CAACS,CAAD,EAAIC,CAAJ,KAAUT,IAAI,CAACU,KAAL,CAAYV,IAAI,CAACW,MAAL,KAAgB5C,OAAO,CAAC0C,CAAD,CAAxB,GAA+BvC,QAA1C,CAApB,CADD;;AAGA,QAAM0C,cAAc,GAAG,CAACC,IAAD,EAAOC,IAAI,GAAGhC,KAAd,KAAwB;AAC9C,SAAK,MAAMiC,OAAX,IAAsBD,IAAtB,EAA4B;AAC3B,UAAID,IAAI,CAAC,CAAD,CAAJ,KAAYE,OAAO,CAAC,CAAD,CAAnB,IAA0BF,IAAI,CAAC,CAAD,CAAJ,KAAYE,OAAO,CAAC,CAAD,CAAjD,EAAsD,OAAO,IAAP;AACtD;;AACD,WAAO,KAAP;AACA,GALD;;AAOA,QAAMC,mBAAmB,GAAIF,IAAD,IAAU;AACrC,QAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,MAAe9B,KAAK,CAAC,CAAD,CAApB,IAA2B8B,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,MAAe9B,KAAK,CAAC,CAAD,CAAnD,EAAwD;AACvDV,MAAAA,UAAU,CAAC6B,IAAX;AACA,UAAIc,QAAQ,GAAGV,UAAU,EAAzB;;AACA,aAAOK,cAAc,CAACK,QAAD,EAAWH,IAAX,CAArB,EAAuCP,UAAU;;AACjDtB,MAAAA,QAAQ,CAACgC,QAAD,CAAR;AACA,aAAO,IAAP;AACA;;AACD,WAAO,KAAP;AACA,GATD;;AAWA,QAAMC,MAAM,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAexC,KAAf,CAAX,CAAlB;AACA,UAAMyC,YAAY,GAAG,CACpBnB,UAAU,CAACe,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,IAAkBjC,QAAQ,CAAC,CAAD,CAA3B,EAAgC,CAAhC,CADU,EAEpBkB,UAAU,CAACe,SAAS,CAAC,CAAD,CAAT,CAAa,CAAb,IAAkBjC,QAAQ,CAAC,CAAD,CAA3B,EAAgC,CAAhC,CAFU,CAArB;AAIAiC,IAAAA,SAAS,CAACK,OAAV,CAAkBD,YAAlB;AACA,QAAIX,cAAc,CAACW,YAAD,CAAlB,EAAkCrB,OAAO;AACzC,QAAI,CAACc,mBAAmB,CAACG,SAAD,CAAxB,EAAqCA,SAAS,CAACM,GAAV;AACrC1C,IAAAA,QAAQ,CAACoC,SAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,YAAhC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BzC,QAA3B;AACA,GAZD;;AAcA1B,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM+B,OAAO,GAAGd,SAAS,CAACe,OAAV,CAAkBC,UAAlB,CAA6B,IAA7B,CAAhB;AACAF,IAAAA,OAAO,CAACqC,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB7D,OAAO,CAAC,CAAD,CAA/B,EAAoCA,OAAO,CAAC,CAAD,CAA3C;AACAwB,IAAAA,OAAO,CAACsC,SAAR,GAAoB,SAApB;AACAtC,IAAAA,OAAO,CAACuC,QAAR,CAAiB9C,KAAK,CAAC,CAAD,CAAtB,EAA2BA,KAAK,CAAC,CAAD,CAAhC,EAAqC,CAArC,EAAwC,CAAxC;AACAO,IAAAA,OAAO,CAACsC,SAAR,GAAoB,SAApB;AACA/C,IAAAA,KAAK,CAACiD,OAAN,CAAc,CAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD,KAAY1C,OAAO,CAACuC,QAAR,CAAiBE,CAAjB,EAAoBC,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,CAA1B;AACA,GAPQ,EAON,CAACnD,KAAD,EAAQE,KAAR,EAAetB,QAAf,CAPM,CAAT;AASAI,EAAAA,WAAW,CAAC,MAAMoD,MAAM,EAAb,EAAiB9B,UAAjB,CAAX;AAEA,QAAM8C,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAhB;;AAEA,WAASC,cAAT,GAA0B;AACzB,QAAIH,OAAO,CAACI,iBAAZ,EAA+B;AAC7BJ,MAAAA,OAAO,CAACI,iBAAR;AACD,KAFD,MAEO,IAAIJ,OAAO,CAACK,oBAAZ,EAAkC;AAAE;AACzCL,MAAAA,OAAO,CAACK,oBAAR;AACD,KAFM,MAEA,IAAIL,OAAO,CAACM,uBAAZ,EAAqC;AAAE;AAC5CN,MAAAA,OAAO,CAACM,uBAAR;AACD,KAFM,MAEA,IAAIN,OAAO,CAACO,mBAAZ,EAAiC;AAAE;AACxCP,MAAAA,OAAO,CAACO,mBAAR;AACD;AACC;;AACH,WAASC,eAAT,GAA2B;AAC1B,QAAIP,QAAQ,CAACQ,cAAb,EAA6B;AAC5BR,MAAAA,QAAQ,CAACQ,cAAT;AACA,KAFD,MAEO,IAAIR,QAAQ,CAACS,mBAAb,EAAkC;AAAE;AAC1CT,MAAAA,QAAQ,CAACS,mBAAT;AACA,KAFM,MAEA,IAAIT,QAAQ,CAACU,oBAAb,EAAmC;AAAE;AAC3CV,MAAAA,QAAQ,CAACU,oBAAT;AACA,KAFM,MAEA,IAAIV,QAAQ,CAACW,gBAAb,EAA+B;AAAE;AACvCX,MAAAA,QAAQ,CAACW,gBAAT;AACA;AACD;;AAED,sBACC;AACC,IAAA,SAAS,EAAC,QADX;AAEC,IAAA,IAAI,EAAC,QAFN;AAGC,IAAA,QAAQ,EAAC,IAHV;AAIC,IAAA,SAAS,EAAGC,KAAD,IAAWnD,IAAI,CAACmD,KAAK,CAAClD,OAAP,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,gBAAgB,EAAC,cAAlD;AAAiE,IAAA,MAAM,EAAEjB,aAAzE;AAAwF,IAAA,cAAc,EAAE,MAAMC,gBAAgB,CAAC,KAAD,CAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CAND,eASC,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,gBAAgB,EAAC,cAA1C;AAAyD,IAAA,MAAM,EAAEH,SAAjE;AAA4E,IAAA,cAAc,EAAE,MAAMC,YAAY,CAAC,KAAD,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFD,eAGC;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAA+B,IAAA,OAAO,EAAE,MAAM;AAACA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB0D,MAAAA,cAAc;AAAIK,MAAAA,eAAe;AAAIL,MAAAA,cAAc;AAAG,KAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHD,CATD,eAeC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAfD,eAgBC;AACC,IAAA,SAAS,EAAC,KADX;AAEC,IAAA,GAAG,EAAE5D,SAFN;AAGC,IAAA,KAAK,EAAG,GAAEV,OAAO,CAAC,CAAD,CAAI,IAHtB;AAIC,IAAA,MAAM,EAAG,GAAEA,OAAO,CAAC,CAAD,CAAI,IAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,eAsBC;AAAQ,IAAA,SAAS,EAAE,CAACqB,UAAD,GAAc,aAAd,GAA8B,eAAjD;AAAkE,IAAA,OAAO,EAAEO,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,CAACP,UAAD,GAAc,aAAd,GAA8B,eAArC,CADD,CAtBD,CADD;AA4BA,CApJD;;AAsJA,eAAeZ,GAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport UIfx from 'uifx';\nimport gameOver from './assets/gameOver.mp3'\nimport point from './assets/point.wav'\nimport hit from './assets/hit.wav'\nimport Modal from 'react-modal';\nimport { useInterval } from './useInterval.js';\nimport {\n\tmapSize,\n\tsnakeSpawnPos,\n\tappleSpawnPos,\n\tmapScale,\n\tspeed,\n\tcompass,\n} from './initializer.js';\nimport './App.css';\n\nconst gameOverSound = new UIfx(gameOver);\nconst pointSound = new UIfx(point);\nconst hitSound = new UIfx(hit);\n\nconst App = () => {\n\tconst canvasRef = useRef();\n\tconst [modalOpen, setModalOpen] = useState(true);\n\tconst [gameOverModal, setGameOverModal] = useState(false);\n\tconst [snake, setSnake] = useState(snakeSpawnPos);\n\tconst [apple, setApple] = useState(appleSpawnPos);\n\tconst [momentum, setMomentum] = useState([0, -1]);\n\tconst [snakeSpeed, setSnakeSpeed] = useState(null);\n\tconst [gameOver, setGameOver] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst context = canvasRef.current.getContext('2d');\n\t\tcontext.setTransform(mapScale, 0, 0, mapScale, 0, 0);\n\t});\n\n\tconst startGame = () => {\n\t\tsetSnake(snakeSpawnPos);\n\t\tsetApple(appleSpawnPos);\n\t\tsetMomentum([0, -1]);\n\t\tsetSnakeSpeed(speed);\n\t\tsetGameOver(false);\n\t};\n\n\tconst move = (keyCode) => {\n\t\tif (keyCode in compass) {\n\t\t\tconst newMomentum = compass[keyCode];\n\t\t\tif (\n\t\t\t\tnewMomentum.map(Math.abs)[0] !== momentum.map(Math.abs)[0] &&\n\t\t\t\tnewMomentum.map(Math.abs)[1] !== momentum.map(Math.abs)[1]\n\t\t\t)\n\t\t\t\tsetMomentum(newMomentum);\n\t\t}\n\t\telse if (keyCode === 13 || keyCode === 32) startGame();\n\t};\n\n\tconst endGame = () => {\n\t\tsetGameOverModal(true);\n\t\thitSound.play();\n\t\tgameOverSound.play();\n\t\tsetSnakeSpeed(null);\n\t\tsetGameOver(true);\n\t};\n\n\tconst wrapAdjust = (value, index) => {\n\t\tif (value >= mapSize[index] / mapScale) return 0;\n\t\telse if (value < 0) return mapSize[index] / mapScale - 1;\n\t\telse return value;\n\t};\n\n\tconst spawnApple = () =>\n\t\tapple.map((_, i) => Math.floor((Math.random() * mapSize[i]) / mapScale));\n\n\tconst checkCollision = (head, snek = snake) => {\n\t\tfor (const segment of snek) {\n\t\t\tif (head[0] === segment[0] && head[1] === segment[1]) return true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst checkAppleCollision = (snek) => {\n\t\tif (snek[0][0] === apple[0] && snek[0][1] === apple[1]) {\n\t\t\tpointSound.play();\n\t\t\tlet newApple = spawnApple();\n\t\t\twhile (checkCollision(newApple, snek)) spawnApple();\n\t\t\tsetApple(newApple);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tconst gameOn = () => {\n\t\tconst snakeCopy = JSON.parse(JSON.stringify(snake));\n\t\tconst newSnakeHead = [\n\t\t\twrapAdjust(snakeCopy[0][0] + momentum[0], 0),\n\t\t\twrapAdjust(snakeCopy[0][1] + momentum[1], 1),\n\t\t];\n\t\tsnakeCopy.unshift(newSnakeHead);\n\t\tif (checkCollision(newSnakeHead)) endGame();\n\t\tif (!checkAppleCollision(snakeCopy)) snakeCopy.pop();\n\t\tsetSnake(snakeCopy);\n\t\tconsole.log('head position is', newSnakeHead);\n\t\tconsole.log('momentum is', momentum);\n\t};\n\n\tuseEffect(() => {\n\t\tconst context = canvasRef.current.getContext('2d');\n\t\tcontext.clearRect(0, 0, mapSize[0], mapSize[1]);\n\t\tcontext.fillStyle = '#ff353a';\n\t\tcontext.fillRect(apple[0], apple[1], 1, 1);\n\t\tcontext.fillStyle = '#00ff40';\n\t\tsnake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n\t}, [snake, apple, gameOver]);\n\n\tuseInterval(() => gameOn(), snakeSpeed);\n\n\tconst element = document.getElementById('root');\n\n\tfunction openFullscreen() {\n\t\tif (element.requestFullscreen) {\n\t\t  element.requestFullscreen();\n\t\t} else if (element.mozRequestFullScreen) { /* Firefox */\n\t\t  element.mozRequestFullScreen();\n\t\t} else if (element.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n\t\t  element.webkitRequestFullscreen();\n\t\t} else if (element.msRequestFullscreen) { /* IE/Edge */\n\t\t  element.msRequestFullscreen();\n\t\t}\n\t  }\n\tfunction closeFullscreen() {\n\t\tif (document.exitFullscreen) {\n\t\t\tdocument.exitFullscreen();\n\t\t} else if (document.mozCancelFullScreen) { /* Firefox */\n\t\t\tdocument.mozCancelFullScreen();\n\t\t} else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n\t\t\tdocument.webkitExitFullscreen();\n\t\t} else if (document.msExitFullscreen) { /* IE/Edge */\n\t\t\tdocument.msExitFullscreen();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"keyCap\"\n\t\t\trole=\"button\"\n\t\t\ttabIndex=\"-1\"\n\t\t\tonKeyDown={(event) => move(event.keyCode)}\n\t\t>\n\t\t\t<Modal className=\"gameOverModal\" overlayClassName=\"modalOverlay\" isOpen={gameOverModal} onRequestClose={() => setGameOverModal(false)}>\n\t\t\t\t<h1 className=\"mainTitle\">Game Over!</h1>\n\t\t\t</Modal>\n\t\t\t<Modal className=\"modal\" overlayClassName=\"modalOverlay\" isOpen={modalOpen} onRequestClose={() => setModalOpen(false)}>\n\t\t\t\t<h2>Would you like to enable fullscreen?</h2>\n\t\t\t\t<p>(Recommended)</p>\n\t\t\t\t<button className=\"modalButton\"onClick={() => {setModalOpen(false); openFullscreen(); closeFullscreen(); openFullscreen()}}>Ok</button>\n\n\t\t\t</Modal>\n\t\t\t<h1 className=\"mainTitle\">Classic Snake</h1>\n\t\t\t<canvas\n\t\t\t\tclassName=\"map\"\n\t\t\t\tref={canvasRef}\n\t\t\t\twidth={`${mapSize[0]}px`}\n\t\t\t\theight={`${mapSize[1]}px`}\n\t\t\t/>\n\t\t\t<button className={!snakeSpeed ? 'startButton' : 'restartButton'} onClick={startGame}>\n\t\t\t\t<span>{!snakeSpeed ? 'Start Game ' : 'Restart Game '}</span>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
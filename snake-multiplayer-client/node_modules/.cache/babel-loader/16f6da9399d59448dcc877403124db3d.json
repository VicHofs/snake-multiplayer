{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\code\\\\Projects\\\\snake-multiplayer\\\\snake-multiplayer-client\\\\src\\\\pages\\\\Home\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { CirclePicker } from 'react-color';\nimport './Home.css';\nimport { useInterval } from '../InGame/useInterval';\nimport api from '../../services/api';\n\nconst Home = () => {\n  const [colors, setColors] = useState();\n  const [map, setMap] = useState();\n  const [myColor, setMyColor] = useState();\n  const history = useHistory();\n\n  const goBack = () => history.goBack();\n\n  const toGame = () => history.push('/in-game/');\n\n  useInterval(() => {\n    api.get('colors').then(response => {\n      setColors(response.data);\n    });\n  }, 1000);\n  useEffect(() => {\n    api.get('map').then(response => {\n      setMap(response.data);\n    });\n  }, []);\n\n  const handleCreateSnake = data => {\n    api.post('snakes', data).then(response => {\n      if (response.data !== 0) {\n        goBack();\n        alert('Oh no! looks like someone beat you to that color...');\n        return;\n      }\n    });\n  };\n\n  const generatePosition = () => [[Math.floor(Math.random() * map.size[0] / map.scale), Math.floor(Math.random() * map.size[1] / map.scale)]];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }\n  }, \"Welcome to Snake Battle Royale!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, \"Pick your color:\"), /*#__PURE__*/React.createElement(CirclePicker, {\n    colors: colors,\n    color: myColor,\n    onChange: pickColor => setMyColor(pickColor.hex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: myColor === 'lightgrey' ? 'inactive' : 'active',\n    style: {\n      backgroundColor: myColor\n    },\n    onClick: myColor === 'lightgrey' ? () => null : () => {\n      handleCreateSnake({\n        color: myColor,\n        position: generatePosition(),\n        points: 0\n      });\n      toGame();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      color: 'white'\n    },\n    className: \"fa fa-check fa-2x\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/Projects/snake-multiplayer/snake-multiplayer-client/src/pages/Home/index.js"],"names":["React","useState","useEffect","useHistory","CirclePicker","useInterval","api","Home","colors","setColors","map","setMap","myColor","setMyColor","history","goBack","toGame","push","get","then","response","data","handleCreateSnake","post","alert","generatePosition","Math","floor","random","size","scale","pickColor","hex","backgroundColor","color","position","points"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { CirclePicker } from 'react-color';\r\nimport './Home.css';\r\nimport { useInterval } from '../InGame/useInterval';\r\n\r\nimport api from '../../services/api';\r\n\r\nconst Home = () => {\r\n\tconst [colors, setColors] = useState();\r\n\tconst [map, setMap] = useState();\r\n\tconst [myColor, setMyColor] = useState();\r\n\r\n\tconst history = useHistory();\r\n\tconst goBack = () => history.goBack();\r\n\tconst toGame = () => history.push('/in-game/');\r\n\r\n\tuseInterval(() => {\r\n\t\tapi.get('colors').then((response) => {\r\n\t\t\tsetColors(response.data);\r\n\t\t});\r\n\t}, 1000);\r\n\r\n\tuseEffect(() => {\r\n\t\tapi.get('map').then((response) => {\r\n\t\t\tsetMap(response.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst handleCreateSnake = (data) => {\r\n\t\tapi.post('snakes', data).then((response) => {\r\n\t\t\tif (response.data !== 0) {\r\n\t\t\t\tgoBack();\r\n\t\t\t\talert('Oh no! looks like someone beat you to that color...');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst generatePosition = () => [\r\n\t\t[\r\n\t\t\tMath.floor((Math.random() * map.size[0]) / map.scale),\r\n\t\t\tMath.floor((Math.random() * map.size[1]) / map.scale),\r\n\t\t],\r\n\t];\r\n\r\n\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t<h1>Welcome to Snake Battle Royale!</h1>\r\n\t\t\t<p>Pick your color:</p>\r\n\t\t\t<CirclePicker\r\n\t\t\t\tcolors={colors}\r\n\t\t\t\tcolor={myColor}\r\n\t\t\t\tonChange={(pickColor) => setMyColor(pickColor.hex)}\r\n\t\t\t/>\r\n\t\t\t<button\r\n\t\t\t\tclassName={myColor === 'lightgrey' ? 'inactive' : 'active'}\r\n\t\t\t\tstyle={{ backgroundColor: myColor }}\r\n\t\t\t\tonClick={\r\n\t\t\t\t\tmyColor === 'lightgrey'\r\n\t\t\t\t\t\t? () => null\r\n\t\t\t\t\t\t: () => {\r\n\t\t\t\t\t\t\t\thandleCreateSnake({\r\n\t\t\t\t\t\t\t\t\tcolor: myColor,\r\n\t\t\t\t\t\t\t\t\tposition: generatePosition(),\r\n\t\t\t\t\t\t\t\t\tpoints: 0,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\ttoGame();\r\n\t\t\t\t\t\t  }\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<i\r\n\t\t\t\t\tstyle={{ color: 'white' }}\r\n\t\t\t\t\tclassName=\"fa fa-check fa-2x\"\r\n\t\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\t></i>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactDom = require('react-dom');\n\nvar _region = require('region');\n\nvar _region2 = _interopRequireDefault(_region);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _dragHelper = require('drag-helper');\n\nvar _dragHelper2 = _interopRequireDefault(_dragHelper);\n\nvar _color = require('./color');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar emptyFn = function emptyFn() {};\n\nvar toColorValue = function toColorValue(value) {\n  if (typeof value == 'string') {\n    return (0, _color.toHsv)(value);\n  }\n\n  return {\n    h: value.h,\n    s: value.s,\n    v: value.v,\n    a: value.a\n  };\n};\n\nexports.default = {\n  toColorValue: toColorValue,\n  getDOMRegion: function getDOMRegion() {\n    return _region2.default.fromDOM((0, _reactDom.findDOMNode)(this));\n  },\n  onMouseDown: function onMouseDown(event) {\n    event.preventDefault();\n    var region = this.getDOMRegion();\n    var info = this.getEventInfo(event, region);\n    (0, _dragHelper2.default)(event, {\n      scope: this,\n      constrainTo: region,\n      onDragStart: function onDragStart(event, config) {\n        config.initialPoint = info;\n        config.minLeft = 0;\n        config.maxLeft = region.width;\n        this.handleDragStart(event);\n      },\n      onDrag: function onDrag(event, config) {\n        var info = this.getEventInfo(event, region);\n        this.updateColor(info);\n        this.handleDrag(event, config);\n      },\n      onDrop: function onDrop(event, config) {\n        var info = this.getEventInfo(event, region);\n        this.updateColor(info);\n        this.handleDrop(event, config);\n      }\n    });\n    this.updateColor(info);\n    this.handleMouseDown(event, {\n      initialPoint: info\n    });\n  },\n  handleMouseDown: function handleMouseDown(event, config) {\n    ;\n    (this.props.onMouseDown || emptyFn).apply(this, this.getColors());\n    this.handleDrag(event, config);\n  },\n  handleUpdate: function handleUpdate(event, config) {\n    var diff = config.diff || {\n      top: 0,\n      left: 0\n    };\n    var initialPoint = config.initialPoint;\n\n    if (initialPoint) {\n      var top = void 0;\n      var left = void 0;\n      left = initialPoint.x + diff.left;\n      top = initialPoint.y + diff.top;\n      left = Math.max(left, config.minLeft);\n      left = Math.min(left, config.maxLeft);\n      this.state.top = top;\n      this.state.left = left;\n      this.state.mouseDown = {\n        x: left,\n        y: top,\n        width: initialPoint.width,\n        height: initialPoint.height\n      };\n    }\n\n    if (this.props.inPicker) {\n      //the picker handles the values\n      return;\n    }\n\n    if (!this.props.value) {\n      this.setState({\n        value: this.hsv\n      });\n    }\n  },\n  handleDragStart: function handleDragStart(event) {},\n  handleDrag: function handleDrag(event, config) {\n    this.handleUpdate(event, config);\n    (this.props.onDrag || emptyFn).apply(this, this.getColors());\n  },\n  handleDrop: function handleDrop(event, config) {\n    this.handleUpdate(event, config);\n    this.state.mouseDown = false;\n    (this.props.onChange || emptyFn).apply(this, this.getColors());\n  },\n  getColors: function getColors() {\n    var first = this.props.inPicker ? this.hsv : this.toStringValue(this.hsv);\n    var args = [first];\n\n    if (!this.props.inPicker) {\n      args.push((0, _objectAssign2.default)({}, this.hsv));\n    }\n\n    return args;\n  },\n  getEventInfo: function getEventInfo(event, region) {\n    region = region || this.getDOMRegion();\n    var x = event.clientX - region.left;\n    var y = event.clientY - region.top;\n    return {\n      x: x,\n      y: y,\n      width: region.getWidth(),\n      height: region.getHeight()\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/victo/Desktop/code/Projects/snake-multiplayer/snake-multiplayer-client/node_modules/react-color-picker/lib/utils/common.js"],"names":["Object","defineProperty","exports","value","_reactDom","require","_region","_region2","_interopRequireDefault","_objectAssign","_objectAssign2","_dragHelper","_dragHelper2","_color","obj","__esModule","default","emptyFn","toColorValue","toHsv","h","s","v","a","getDOMRegion","fromDOM","findDOMNode","onMouseDown","event","preventDefault","region","info","getEventInfo","scope","constrainTo","onDragStart","config","initialPoint","minLeft","maxLeft","width","handleDragStart","onDrag","updateColor","handleDrag","onDrop","handleDrop","handleMouseDown","props","apply","getColors","handleUpdate","diff","top","left","x","y","Math","max","min","state","mouseDown","height","inPicker","setState","hsv","onChange","first","toStringValue","args","push","clientX","clientY","getWidth","getHeight"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _reactDom = require('react-dom');\n\nvar _region = require('region');\n\nvar _region2 = _interopRequireDefault(_region);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _dragHelper = require('drag-helper');\n\nvar _dragHelper2 = _interopRequireDefault(_dragHelper);\n\nvar _color = require('./color');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar emptyFn = function emptyFn() {};\n\nvar toColorValue = function toColorValue(value) {\n  if (typeof value == 'string') {\n    return (0, _color.toHsv)(value);\n  }\n\n  return {\n    h: value.h,\n    s: value.s,\n    v: value.v,\n    a: value.a\n  };\n};\nexports.default = {\n\n  toColorValue: toColorValue,\n\n  getDOMRegion: function getDOMRegion() {\n    return _region2.default.fromDOM((0, _reactDom.findDOMNode)(this));\n  },\n  onMouseDown: function onMouseDown(event) {\n    event.preventDefault();\n\n    var region = this.getDOMRegion();\n    var info = this.getEventInfo(event, region);\n\n    (0, _dragHelper2.default)(event, {\n      scope: this,\n      constrainTo: region,\n      onDragStart: function onDragStart(event, config) {\n        config.initialPoint = info;\n\n        config.minLeft = 0;\n        config.maxLeft = region.width;\n\n        this.handleDragStart(event);\n      },\n      onDrag: function onDrag(event, config) {\n        var info = this.getEventInfo(event, region);\n        this.updateColor(info);\n        this.handleDrag(event, config);\n      },\n      onDrop: function onDrop(event, config) {\n        var info = this.getEventInfo(event, region);\n        this.updateColor(info);\n        this.handleDrop(event, config);\n      }\n    });\n\n    this.updateColor(info);\n    this.handleMouseDown(event, { initialPoint: info });\n  },\n  handleMouseDown: function handleMouseDown(event, config) {\n    ;(this.props.onMouseDown || emptyFn).apply(this, this.getColors());\n    this.handleDrag(event, config);\n  },\n  handleUpdate: function handleUpdate(event, config) {\n    var diff = config.diff || { top: 0, left: 0 };\n    var initialPoint = config.initialPoint;\n\n    if (initialPoint) {\n\n      var top = void 0;\n      var left = void 0;\n\n      left = initialPoint.x + diff.left;\n      top = initialPoint.y + diff.top;\n\n      left = Math.max(left, config.minLeft);\n      left = Math.min(left, config.maxLeft);\n\n      this.state.top = top;\n      this.state.left = left;\n\n      this.state.mouseDown = {\n        x: left,\n        y: top,\n        width: initialPoint.width,\n        height: initialPoint.height\n      };\n    }\n\n    if (this.props.inPicker) {\n      //the picker handles the values\n      return;\n    }\n\n    if (!this.props.value) {\n      this.setState({\n        value: this.hsv\n      });\n    }\n  },\n  handleDragStart: function handleDragStart(event) {},\n  handleDrag: function handleDrag(event, config) {\n    this.handleUpdate(event, config);(this.props.onDrag || emptyFn).apply(this, this.getColors());\n  },\n  handleDrop: function handleDrop(event, config) {\n    this.handleUpdate(event, config);\n    this.state.mouseDown = false;(this.props.onChange || emptyFn).apply(this, this.getColors());\n  },\n  getColors: function getColors() {\n    var first = this.props.inPicker ? this.hsv : this.toStringValue(this.hsv);\n\n    var args = [first];\n\n    if (!this.props.inPicker) {\n      args.push((0, _objectAssign2.default)({}, this.hsv));\n    }\n\n    return args;\n  },\n  getEventInfo: function getEventInfo(event, region) {\n    region = region || this.getDOMRegion();\n\n    var x = event.clientX - region.left;\n    var y = event.clientY - region.top;\n\n    return {\n      x: x,\n      y: y,\n      width: region.getWidth(),\n      height: region.getHeight()\n    };\n  }\n};"]},"metadata":{},"sourceType":"script"}